//TouristOperationsController.java(26.04.2025)
package com.nt.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PatchMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.nt.entity.Tourist;
import com.nt.service.ITouristMgmtService;

@RestController
@RequestMapping("/tourist")
public class TouristOperationsController {
     @Autowired
     private ITouristMgmtService service;
     
     @PostMapping("/register")
     public ResponseEntity<String> enrollTourist(@RequestBody Tourist tourist){
    	 try {
    		 //Use Service
    		 String resultMsg=service.registerTourist(tourist);
    		 return new ResponseEntity<String>(resultMsg,HttpStatus.CREATED);
    	 }
    	 catch(Exception e) {
    		 return new ResponseEntity<String>("Problem in Tourist Enrollment",
    				                                                 HttpStatus.INTERNAL_SERVER_ERROR);
    	 }
     }
     
     @GetMapping("/findAll")
     public ResponseEntity<?> displayTourists(){
    	 try {
    		 List<Tourist> list=service.fetchAllTourists();
    		 return new ResponseEntity<List<Tourist>>(list,HttpStatus.OK);
    	 }
    	 catch(Exception e) {
    		 e.printStackTrace();
    		 return new ResponseEntity<String>("Problem In Fetching Tourists",
    				                                                                  HttpStatus.INTERNAL_SERVER_ERROR);   
    	 }
     }
     
     @GetMapping("/findAll/{city1}/{city2}/{city3}")
     public ResponseEntity<?> fetchTouristsByCities(@PathVariable(required = false) String city1,
                                                                                                     @PathVariable(required = false) String city2,
                                                                                                      @PathVariable(required = false) String city3){
    	 try {
    		 List<Tourist> list=service.showAllTourist(city1, city2, city3);
    		 return new ResponseEntity<List<Tourist>>(list,HttpStatus.OK);
    	 }catch(Exception e) {
    		 return new ResponseEntity<String>(e.getMessage(),HttpStatus.INTERNAL_SERVER_ERROR);
    	 }
     }
     
     @GetMapping("/find/{tid}")
     public ResponseEntity<?> displayTouristById(@PathVariable("tid") Integer id){
    	 try {
    		 Tourist tourist=service.fetchTouristById(id);
    		 return new ResponseEntity<Tourist>(tourist,HttpStatus.OK);
    	 }
    	 catch(Exception e) {
    		 return new ResponseEntity<String>(e.getMessage(),
    				                           HttpStatus.INTERNAL_SERVER_ERROR);
    	 }
     }
     
     @PutMapping("/modify")
     public ResponseEntity<String> modifyTourist(@RequestBody Tourist tourist){
    	 try {
    		 String msg=service.updateTouristDetails(tourist);
    		 return new ResponseEntity<String>(msg,HttpStatus.OK);
    	 }
    	 catch(Exception e) {
    		 e.printStackTrace();
    		 return new ResponseEntity<String>(e.getMessage(),HttpStatus.INTERNAL_SERVER_ERROR);
    	 }
     }
     
     @GetMapping("/findWithName/{name}")
     public ResponseEntity<?> findTouristsByName(@PathVariable("name") String name){
    	 try {
    		 //Use Service
    		 List<Tourist> tourist=service.findAllTouristsByName(name);
    		 return new ResponseEntity<List<Tourist>>(tourist,HttpStatus.OK);
    	 }
    	 catch(Exception e) {
    		 return new ResponseEntity<String>(e.getMessage(),HttpStatus.INTERNAL_SERVER_ERROR);
    	 }
     }
     
     @PatchMapping("/pupdate/{id}/{percentage}")
     public ResponseEntity<?> modifyTouristBudgetDetailsById(@PathVariable("tid") int tid,
    		                                                                                                                @PathVariable("percentage") double perecentage){
    	 try {
    		 //Use Service
    		 String resultMsg=service.updateTouristBudgetById(tid, perecentage);
    		 return new ResponseEntity<String>(resultMsg,HttpStatus.OK);
    	 }
    	 catch(Exception e) {
    		 return new ResponseEntity<String>(e.getMessage(),HttpStatus.INTERNAL_SERVER_ERROR);
    	 }
     }
}
